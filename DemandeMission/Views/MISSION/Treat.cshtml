@model DemandeMission.Models.MISSION

@{
    ViewBag.Title = "Treat";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MISSION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @*@Html.LabelFor(model => model.NOM, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOM, new { htmlAttributes = new { @class = "form-control" , @type="hidden"} })
                @Html.ValidationMessageFor(model => model.NOM, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.PRÉNOM, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRÉNOM, new { htmlAttributes = new { @class = "form-control" , @type="hidden"} })
                @Html.ValidationMessageFor(model => model.PRÉNOM, "", new { @class = "text-danger" , @type="hidden"})
            </div>
        </div>

       
        <div class="form-group">
            @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label col-md-2"})
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.STATUS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
            </div>*@
            @{
                var items = new SelectList(new[]
                                {
                       new SelectListItem {Text = "Confirmed", Value = "Confirmed"},
                       new SelectListItem {Text = "Refused", Value = "Refused"},
                   }, "Text", "Value");
                @Html.DropDownListFor(x => x.STATUS, @items)
            }
            @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
        </div>
        
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
